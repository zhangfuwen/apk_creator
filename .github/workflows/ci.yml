name: Build and Release

on:
  push:
    branches:
      - '**'  # Run on any branch push
    tags:
      - 'v*'  # Run only when a version tag like v1.0.0 is pushed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for git describe in later steps

      - name: Build APK
        run: |
          bash build.sh -d

      - name: Upload APK Artifact (on all pushes)
        if: github.ref != 'refs/tags/v*'
        uses: actions/upload-artifact@v4
        with:
          name: app-signed.apk
          path: build/apk/app-signed.apk
          retention-days: 7

      # - name: Create Release (on tag push)
      #   if: startsWith(github.ref, 'refs/tags/v')
      #   uses: softprops/action-merge-request@v1
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
          # Use action-gh-release instead of merge-request for proper release creation
        # Instead, use a dedicated release action:
        # We'll switch to `release` action below

      # ðŸ”¥ Correct approach: Use `marvinpinto/action-automatic-releases` or similar
      - name: Create Release (on tag push)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: |
            build/apk/app-signed.apk
          title: Release ${{ github.ref_name }}
          body: |
            This is a release of the app.
            Uploaded from CI build.
          draft: false

      - name: Upload APK to Release 
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # Optional: verify APK exists
          if [ ! -f "build/apk/app-signed.apk" ]; then
            echo "APK not found at build/apk/app-signed.apk"
            exit 1
          fi

          # Use GitHub CLI to upload asset to release
          gh release upload ${{ github.ref_name }} build/apk/app-signed.apk --clobber
